package  {	/*		Catalogue Selector class	*/	import flash.display.MovieClip;	import flash.events.Event;	import flash.events.MouseEvent;	import caurina.transitions.*		public class CataSelector extends MovieClip {		public var currentPage:int;		public var totalPages:int;		public var memorySelected		public var _width;		public var _height;		var gh		var thArr:Array=[];		public function CataSelector() {			visible=false;			alpha=0;						this.blendMode="layer"						leftBtn.addEventListener(MouseEvent.CLICK,btnHandler)			rightBtn.addEventListener(MouseEvent.CLICK,btnHandler)						closeBtn.addEventListener(MouseEvent.MOUSE_DOWN,close)					}		/*//close button mouse down handler*/		private function close(e:MouseEvent):void{			hide();			MovieClip(root).blackMC2.visible=false;		}		/*//buttons handler*/		private function btnHandler(e:MouseEvent):void{			if(e.type==MouseEvent.CLICK){				//if is right button 				if(e.currentTarget==rightBtn){															if(currentPage<totalPages-1){												leftBtn.alpha=1;						 currentPage++;						 						 _txt.text="PAGE " + (currentPage+1)+" OF "+totalPages;						 if(currentPage==totalPages-1){							 rightBtn.alpha=0.3;							 						 }					 					var old=currentPage-1;											for(var j=0;j<gh;j++){														var ft=thArr[j+old*gh]														Tweener.addTween(ft, {									delay:j*0.1,									time:.2,									 									alpha:0,									visible:false,																		transition:"easeInOutQuart",																		onComplete:(j==(0)?showCurrent:null)							});						}										}					 				}				//if is left button 				else if(e.currentTarget==leftBtn){															if(currentPage>0){						currentPage--;						_txt.text="PAGE " + (currentPage+1)+" OF "+totalPages;						rightBtn.alpha=1;												if(currentPage==0){							 leftBtn.alpha=0.3;							 						 }						 						 old=currentPage+1;						 						 						for(  j=0;j<gh;j++){														 ft=thArr[j+old*gh]														Tweener.addTween(ft, {									delay:j*0.1,									time:.2,									 									alpha:0,									visible:false,																		transition:"easeInOutQuart",																		onComplete:(j==(0)?showCurrent:null)							});						}																	}										 									}			}		}				//show thumbs		private  function showCurrent(){			for(var i=0;i<gh;i++){				var ft=thArr[i+currentPage*gh];				if(ft){					ft.visible=true;					ft.alpha=0;					Tweener.addTween(ft, {								delay:i*0.1,								time:.2,								alpha:1,								transition:"easeInOutQuart" 					});					}			}		} 		 		//show this (cataselector)		public function show():void{			var mc=MovieClip(root).blackMC;			mc.alpha=0;			mc.visible=true;			this.visible=true;			this.alpha=0;			this.x=-_width;			Tweener.addTween(mc, {								delay:0,								time:.5,								alpha:0.8,								transition:"easeInOutQuart" 			});			Tweener.addTween(this, {								delay:0,								time:.8,								alpha:1,								 								x:int((stage.stageWidth-_width)*.5),								transition:"easeInOutQuart"  											});		}		//hide this (cataselector)		public function hide():void{			var mc=MovieClip(root).blackMC;			var mc2=MovieClip(root).blackMC2;			mc2.visible=true;			Tweener.addTween(mc, {								delay:0,								time:1,								alpha:0,								visible:false,								transition:"easeInOutQuart" 			});			Tweener.addTween(this, {								delay:0,								time:1,								alpha:0,								 								x:-_width,								transition:"easeInOutQuart" ,								onComplete:function(){									//mc2.visible=false;								}			});		}		// load thumbs		public function load(arr:Array){						gh=Number(Parameters.cataThumbGrid.split("x")[0]);			totalPages=Math.ceil(arr.length/gh);									_width=bgMC.width=(Parameters.cataThumbWidth+1)*gh+Parameters.cataThumFrameRimX*2;			_height=bgMC.height=Parameters.cataThumbHeight+Parameters.cataThumFrameRimY*2;			y=(stage.stageHeight-_height)/2;			closeBtn.x=Math.floor(bgMC.width-Parameters.cataThumFrameRimX+(Parameters.cataThumFrameRimX-closeBtn.width)*0.5-6);			closeBtn.y=Math.floor((Parameters.cataThumFrameRimY-closeBtn.height)*0.5+6);						leftBtn.x=20;			rightBtn.x=Math.floor(bgMC.width-20);			leftBtn.y=rightBtn.y=Math.floor(bgMC.height*.5);			for(var j=0;j<arr.length;j++){				 				var ft=new FunTumb();				ft.id=j				ft.x=(Parameters.cataThumbWidth+1)*j+Parameters.cataThumFrameRimX- int(j/gh)*gh*(Parameters.cataThumbWidth+1);				ft.y=Parameters.cataThumFrameRimY;				ft.title=arr[j].name;				ft.addEventListener(MouseEvent.MOUSE_DOWN,function(e){						Parameters.memoryCata=Parameters.cata						Parameters.cata=e.currentTarget.id						hide();						dispatchEvent(new Event("select"));													})				this.addChild(ft);								ft.load(arr[j].cataImage)								if(j>=gh){					ft.alpha=0;					ft.visible=false;				}								ft.addEventListener("onRollDown",onRollDown)								if(j==0){					ft.selecte();					memorySelected=ft;				}								thArr.push(ft);			}		}		/*// on rollMC mouse down handler*/		private function onRollDown(e:Event):void{			if(memorySelected){				memorySelected.unSelecte();			}			FunTumb(e.target).selecte();			memorySelected=FunTumb(e.target);		}	}	}